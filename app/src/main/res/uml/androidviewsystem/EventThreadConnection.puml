@startuml
title
<font color=red size=16>EventThreadConnection类图</font>

endtitle

header
<font color=red>Warning:</font>
Do not use for commercial purposes.
endheader
skinparam backgroundcolor Beige

package EventConnection #9DDD5D{
    interface IInterface

    abstract class IDisplayEventConnection {
        status_t stealReceiveChannel(BitTube* outChannel)
        void requestNextVsync()
    }
    class BnDisplayEventConnection {
    }
    class BpDisplayEventConnection {
}

}
class EventThreadConnection {
    EventThread mEventThread
   status_t postEvent(DisplayEventReceiver::Event& event)
}
class EventThread {
    std::vector<wp<EventThreadConnection>>\n    mDisplayEventConnections
}
class DisplayEventReceiver {
    sp<IDisplayEventConnection> mEventConnection
    unique_ptr<gui::BitTube> mDataChannel;
    struct Event()
}
class Event {
    type
    vsync
    time
}
class DisplayEventDispatcher {
    sp<Looper> mLooper;
    DisplayEventReceiver mReceiver;
}
abstract LooperCallback {
    handleEvent()
}
IDisplayEventConnection .up.|> IInterface
BnDisplayEventConnection -up-|> IDisplayEventConnection
BpDisplayEventConnection -up-|> IDisplayEventConnection
EventThreadConnection -up-|> BnDisplayEventConnection
EventThread <-> EventThreadConnection
DisplayEventReceiver -> BpDisplayEventConnection
DisplayEventReceiver *-up- Event
DisplayEventDispatcher -> DisplayEventReceiver
DisplayEventDispatcher -up-|> LooperCallback

note bottom of DisplayEventReceiver
通过DisplayEventConnection与EventThread通信
end note

note bottom of DisplayEventDispatcher
通过looper设置监听通道mReceiver.getFd
设置looper回调为this，即handleEvent
end note

right footer Generated by Yaoguang
@enduml